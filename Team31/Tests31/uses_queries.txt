1 - argument variant: (s, v)
stmt s; variable v;
Select s such that Uses(s, v)
1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22
5000
2 - argument variant: (s, v) - testing on all nesting levels, bracket levels, boolean and arithmetic operators
stmt s; variable v;
Select v such that Uses(s, v)
b, b1, b2, b3, b4, b5, c, d, e, Used1, g, h, Used5, k, l, Used6, n, o, p, q, r, s, Used2, c1, c2, c3, c4, Used7, Used3, Used4
5000
3 - argument variant: (s, IDENT)
stmt s;
Select s such that Uses(s, "b")
1
5000
4 - argument variant: (s, IDENT) => empty
stmt s;
Select s such that Uses(s, IDENT)

5000
5 - argument variant: (s, _)
stmt s;
Select s such that Uses(s, _)
1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22
5000
6 - argument variant: (1, v)
variable v;
Select v such that Uses(1, v)
b, b1, b2, b3, b4, b5
5000
7 - argument variant: (1, v) => empty
variable v;
Select v such that Uses(2, v)

5000
8 - argument variant: (1, IDENT)
stmt s;
Select s such that Uses(1, "b")
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
5000
9 - argument variant: (1, IDENT) => empty
stmt s;
Select s such that Uses(2, "c")

5000
10 - argument variant: (1, _)
stmt s;
Select s such that Uses(1, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
5000
11 - argument variant: (1, _) => empty
stmt s;
Select s such that Uses(2, _)

5000
12 - Uses stmtRef: print
print pn; variable v;
Select pn such that Uses(pn, v)
3, 5, 7, 10, 12, 16, 19, 22
5000
13 - Uses stmtRef: print => empty
print pn; variable v;
Select pn such that Uses(pn, "b")

5000
14 - Uses stmtRef: if (all if stmts 'Uses' some variable)
if ifs; variable v;
Select ifs such that Uses(ifs, v)
4, 18
5000
15 - Uses stmtRef: if - select variables
if ifs; variable v;
Select v such that Uses(ifs, v)
d, e, Used1, g, h, Used5, k, l, Used6, c1, c2, Used3, c3, c4, Used4
5000
16 - Uses stmtRef: while (all while stmts 'Uses' some variable)
while w; variable v;
Select w such that Uses(w, _)
6, 9, 11, 21
5000
17 - Uses stmtRef: while - select variables
while w; variable v;
Select v such that Uses(w, v)
g, h, Used5, k, l, Used6, n, o, p, q, r, s, Used2, c3, c4, Used4
5000
18 - Uses stmtRef: call
call c; variable v;
Select c such that Uses(c, v)
14, 17, 20
5000
19 - Uses stmtRef: call - indirect uses captured
call c; variable v;
Select v such that Uses(14, v)
Used7, c1, c2, c3, c4, Used3, Used4
5000
20 - Uses entRef: procedure syn
procedure p; variable v;
Select p such that Uses(p, v)
Uses1, Uses3, Uses4, Uses5
5000
21 - Uses entRef: procedure syn
procedure p; variable v;
Select p such that Uses(p, "Used7")
Uses1, Uses3
5000
22 - Uses entRef: procedure syn
procedure p; variable v;
Select p such that Uses(p, _)
Uses1, Uses3, Uses4, Uses5
5000
23 - Uses entRef: procedure IDENT
variable v;
Select v such that Uses("Uses3", v)
Used7, c1, c2, c3, c4, Used3, Used4
5000
24 - Uses entRef: procedure IDENT
procedure p;
Select p such that Uses("Uses1", "Used7")
Uses1, Uses2, Uses3, Uses4, Uses5
5000
25 - direct procedure modifies => empty
variable v;
Select v such that Uses("Uses2", v)

5000
26 - Uses entRef: procedure IDENT
variable v;
Select v such that Uses("Uses2", _)

5000
27 - unfound variable names
stmt s;
Select s such that Uses(s, "notfound")

5000
28 - unrelated synonyms
stmt s, s1;
Select s such that Uses(s1, "b")
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
5000
29 - unrelated synonyms => empty
stmt s, s1;
Select s such that Uses(s1, "a")

5000
30 - invalid: semantics (stmtRef = '_' is ambiguous)
variable v;
Select v such that Uses(_, v)

5000
